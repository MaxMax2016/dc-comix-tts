name: ??
device: 'cuda'

checkpoint_path: ??
manifest_path: "data/test_manifest.json"
sup_data_path: "sup_data"
sup_data_types: [ 'audio_codec' ]
codec_model: "encodec"

whitelist_path: "sup_data/text/whitelist/lj_speech.tsv"
phoneme_dict_path: "sup_data/text/cmudict-0.7b_nv22.10"
heteronyms_path: "sup_data/text/heteronyms-052722"

sample_rate: 24000
n_mel_channels: 80
n_window_size: 1024
n_window_stride: 256
n_fft: 1024
lowfreq: 0
highfreq: 8000
window: hann

text_normalizer:
  _target_: nemo_text_processing.text_normalization.normalize.Normalizer
  lang: en
  input_case: cased
  whitelist: ${whitelist_path}

text_normalizer_call_kwargs:
  verbose: false
  punct_pre_process: true
  punct_post_process: true

text_tokenizer:
  _target_: nemo.collections.common.tokenizers.text_to_speech.tts_tokenizers.EnglishPhonemesTokenizer
  punct: true
  stresses: true
  chars: true
  apostrophe: true
  pad_with_space: true
  g2p:
    _target_: nemo_text_processing.g2p.modules.EnglishG2p
    phoneme_dict: ${phoneme_dict_path}
    heteronyms: ${heteronyms_path}


dataset:
  _target_: data_total.ExtensiveTTSDataset
  manifest_filepath: ${manifest_path}
  text_tokenizer: ${text_tokenizer}
  text_normalizer: ${text_normalizer}
  text_normalizer_call_kwargs: ${text_normalizer_call_kwargs}
  sample_rate: ${sample_rate}
  sup_data_path: ${sup_data_path}
  sup_data_types: ${sup_data_types}
  n_fft: ${n_fft}
  win_length: ${n_window_size}
  hop_length: ${n_window_stride}
  window: ${window}
  n_mels: ${n_mel_channels}
  lowfreq: ${lowfreq}
  highfreq: ${highfreq}
  max_duration: null
  min_duration: 1.0
  ignore_file: null
  trim: true
  top_db: 35
  lm_model: ${lm_model}
  audio_model: ${audio_model}
  codec_model: ${codec_model}
